* DB 모델링
1. 엔티티(테이블) 식별

2. PK 식별
  1) Key: row(record)를 구분할 때 사용할 한 개 이상의 컬럼의 묶음
      예) 학생명,학생이메일, 강의명,강의시작일
            강의명,학생이메일,강의시작일
	    강의명,학생전화,학생명,강의시작일
             ....      
  2) Candidate Key(후보키, 최소키): 키의 컬럼이 많다. ==> 줄이자 
      예) 강의명,강의시작일,학생이메일
            강의명,강의시작일,학생전화
	    ...
  3) Primary Key(주키): DB관리자가 후보키 중에서 레코드를 구분할 때 사용할 키로 결정한 것.
      예) 강의명,강의시작일,학생이메일

3. PK 컬럼이 여러 컬럼으로 이루어진 경우, 프로그래밍이나 테이블을 관리할 때 불편한다.
    => 실무에서는 임의의 컬럼을 만들어 간단한 일련 번호로 관리한다.
         예) 1, 2, 3, 4, ...
    => 특정 규칙에 따라 생성된 코드값을  PK로 사용한다.
         예) P01200512 => P01(부서코드), 2005(입사년), 12(그 해 입사 순서)
    => PK 컬럼은 한 번 값이 지정되면 변경할 수 없다.
4-1. 제1정규화 
    => 중복 데이터나 중복 컬럼을 분리 하여 별도 테이블로 만든다.
    => 부모-자식 관계를 맺는다.
    1) 학생 데이터 중복 => 분리하여 테이블 생성 => PK선정 
        . 이메일을 PK로 선정하면, 나중에 변경할 수 없다.
	. 실무: 회원에 대해 일련번호를 부여하여 관리한다. 이메일을 자유롭게 변경할 수 있다.
    2) 수강신청 테이블과 학생 테이블을 자식-부모 관계로 만든다.
        . 학생(부모) 1<--------->다 수강신청(자식)
	. 자식테이블에는 부모 테이블의 데이터를 가리키는 PK값이 놓인다. 
	. 자식 테이블에 있는 부모 테이블의 PK 컬럼: Foreign Key(FK; 외부키)
	. 부모테이블(PK) <---------> 자식테이블(FK)

4-2. 제1정규화 
    1) 과목 데이터 분리 
    2) 교육장 데이터 분리
    3) 매니저 데이터 분리
    4) 중복 컬럼 분리: 강사 데이터 분리 => 강사와 수강신청 과목은 다:다 관계이다.
    * 테이블을 분리하다보면 테이블의 관계가 이동할 때가 있다.

4-3. 테이블 간 관계 정리 (정규화 수행할 때 마다 수시로 실행하라!)
    => 교육장은 수강 신청이 아닌 강의 테이블과 관계를 맺는 것이 맞다.
    => 강사 정보도 수강신청 테이블이 아닌 강의 테이블과 관계를 맺는 것이 맞다.
    => 매니저도 수강 신청이 아닌 강의 테이블과 관계를 맺는다.
    
4-4. 다 대 다 관계 해소
	=> DBMS는 다 대 다 관계를 정의할 수 없다.
	=> 관계를 표현하는 테이블을 만들고, 부모-자식 관계(일 대 다)를 맺는다.
	=> 예) 강의-강사 --> "강의배정" 테이블을 만든다. "강사" - "강의배정", "강의" - "강의배정" 관계를 맺는다.
	
5. 제2정규화
	=> PK 컬럼이 2 개 이상으로 구성된 경우 정규화를 수행한다.
	=> 모든 일반 컬럼은 각각의 PK 컬럼에 모두 종속되어야 한다.
	
6. 제3정규화
	=> 모든 일반 컬럼은 반드시 PK 컬럼에 종속되어야 한다. 일반 컬럼이 다른 일반 컬럼에 종속된 경우 이 정규화를 수행한다.
	=> 종속? PK 값이 바뀔 때 같이 바뀌는 컬럼 값 
	=> 예) 우편번호와 기본 주소의 관계 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    